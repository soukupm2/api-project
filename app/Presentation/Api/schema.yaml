openapi: 3.0.4

info:
  title: API Project Presentation
  description: Simple API for code presentation purposes.
  version: 1.0.0

servers:
  - url: http://loclahost:8888
    description: Localhost server

paths:
  /api/v1/auth/register:
    post:
      summary: Register a new user
      security: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User successfully registered
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    readOnly: true
        '400':
          description: Invalid data
        '409':
          description: Email address already registered

  /api/v1/auth/login:
    post:
      summary: Login user
      security: [ ]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
              required:
                - email
                - password
      responses:
        '200':
          description: Successfully logged in
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                required:
                  - token
        '401':
          description: Invalid credentials


  /api/v1/users:
    get:
      summary: Returns a list of users.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A array of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '403':
          description: Forbidden - Admin only
    post:
      summary: Create a new user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          description: User created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    readOnly: true
        '403':
          description: Forbidden - Admin only
        '409':
          description: Email address already registered

  /api/v1/users/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
          readOnly: true
    get:
      summary: Returns a list of users.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A single user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '403':
          description: Forbidden - Admin only
        '404':
          description: User not found
    put:
      summary: Update user
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '204':
          description: User updated
        '400':
          description: Validation failed
        '403':
          description: Forbidden - Admin only
        '404':
          description: User not found
    delete:
      summary: Delete user
      security:
       - bearerAuth: []
      responses:
        '204':
          description: User deleted
        '403':
          description: Forbidden - Admin only
        '404':
          description: User not found

  /api/v1/articles:
    get:
      summary: Get all articles
      security: []
      responses:
        '200':
          description: List of articles
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Article'
    post:
      summary: Create a new article
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '201':
          description: Article created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                    readOnly: true

  /api/v1/articles/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
          format: int64
    get:
      summary: Get article by ID
      security: []
      responses:
        '200':
          description: Article found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Article'
        '404':
          description: Article not found
    put:
      summary: Update article
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Article'
      responses:
        '204':
          description: Article updated
        '403':
          description: Forbidden - Admin or Article owner only
        '404':
          description: Article not found
    delete:
      summary: Delete article
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Article deleted
        '403':
          description: Forbidden - Admin or Article owner only
        '404':
          description: Article not found


components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 180
        name:
          type: string
          maxLength: 255
        role:
          $ref: '#/components/schemas/Role'
      required:
        - id
        - email
        - name
        - role
      example:
        id: 123456
        email: 'user@example.com'
        name: 'John Doe'
        role: 'user'

    UserCreate:
      allOf:
        - $ref: '#/components/schemas/User'
        - type: object
          properties:
            password:
              type: string
              format: password
          required:
            - password

    Role:
      type: string
      enum:
        - admin
        - author
        - reader

    Article:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        title:
          type: string
          maxLength: 255
        content:
          type: string
        author_id:
          type: integer
          format: int64
          readOnly: true
      required:
        - title
        - content
        - author_id

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

security:
  - bearerAuth: []
